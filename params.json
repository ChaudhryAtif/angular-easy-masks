{"name":"Angular Easy Masks","tagline":"Angular component for input fields based on a configurable mask","body":"# angular-easy-masks\r\n\r\nAngularJS component for input fields based on a configurable mask. \r\nCompatible with **AngularJS 1.3.4+**. \r\nWorks together with **ngModelOptions** introduced in AngularJS 1.3.\r\n\r\n## Why?\r\n\r\nThe problem of typing data according to some predefined mask is nothing new. \r\nSolutions already exists for this, even natively in AngularJS.\r\nUnfortunately, I didn't managed to find a solution that worked the way it should.\r\n\r\nAll is needed to such a component is to:\r\n\r\n    a) Guide user through typing on an input field, inserting character separators where appropriate; and \r\n    b) If there's an existing value, it should be presented according the mask provided.\r\n\r\nQuite simple, it seems.\r\n\r\nBut in practice, not so. \r\nI freaked out when I became aware how some libraries approached these requirements \r\n(and with hundreds of lines of code, and dozens of concepts to learn). \r\nIt looks like **clumsy code is winning!!**\r\nBut I **refuse to use that code** in my projects (it's better when we don't see the code, though).\r\n\r\nThen I decided to tackle on this problem and here I present you my approach. \r\nI also took it as a **exercise of good design**, so it was also pleasing to write.\r\nWhen I realized it was actually doing its job well, I decided to polish it and share. \r\nFrom the first prototype, it took a couple of hours more to have it working the *AngularJS way*. \r\nA handful more to make it actually releasable (bower, npm, git).\r\n\r\nAll this work is based on the following assumptions:\r\n\r\n* If it is *flexible*, then it would solve most problems, even ones not aimed by the library author's;\r\n* Focusing on the task of *defining input masks*, in order to accomplish a greater objective (*smooth user input*);\r\n* *Storing input together with separators* (if any) makes more sense and should be easy;\r\n* Do *not mess with model's value* unless user has typed something;\r\n* Do *the best to parse user input*, even input coming from database, in case it does not fulfill the mask;\r\n* Provide *convenience* without sacrificing flexibility;\r\n* By keeping *code base simple*, it is easier to reason about and evolve;\r\n* By fully covering with tests, it can *evolve without introducing bugs*.\r\n\r\n## Features\r\n\r\n* Angular native implementation compatible with 1.3.4+;\r\n* Validate input format, setting `ngFormController's $error` property as appropriate;\r\n* Store separators in models by default (WYSIWYG);\r\n* Handles source model containing separators or not;\r\n* Allows programmatic change of model value;\r\n* Automatically sets input's `maxlength` for you;\r\n* Provide filter for use on interpolation;\r\n* Publish common masks under a name;\r\n* Option to remove separator from model value;\r\n* Integrate seamlessly with `ngModelOptions` (allowInvalid, ngChange, debounce, updateOn).\r\n\r\nAlso, the following requirements can be achieved by means of integrating with other components:\r\n\r\n* Automatic focus next component when input is completed.\r\n\r\n## Future Work \r\n\r\n* Delegate validation to custom services;\r\n* Raise events on format valid/invalid;\r\n* Handle optional symbols in input mask;\r\n\r\n## Usage\r\n\r\n    <input type=\"text\" ng-model=\"ctrl.field\" wt-easy-mask=\"999.999.999-99\" />\r\n\r\nor\r\n\r\n    <input type=\"text\" ng-model=\"ctrl.field\" wt-easy-mask=\"999.999.999-99\" placeholder=\"Type your Identitication Number\"/>\r\n\r\n## Configuration\r\n\r\n    app.config(function (easyMaskProvider) {\r\n        easyMaskProvider.publishMask('myId', '999.999.999-99');\r\n    });\r\n    \r\n### Directives\r\n\r\n#### wt-easy-mask\r\n\r\n * wt-easy-mask: the mask\r\n * placeholder: the mask (optional, if different from the mask)\r\n * wt-easy-mask-options:\r\n   * removeSeparators: boolean = `true`, if separators should be removed before updating the model \r\n\r\n### Filters\r\n\r\n    {{data | easyMask:'99.999-9'}}\r\n    {{data | easyMask:'myId'}}\r\n\r\n## Installation\r\n\r\n### Bower\r\n\r\n    bower install angular-easy-masks --save\r\n\r\n### Application\r\n\r\n#### HTML\r\n\r\n    <script type=\"text/javascript\" src=\"release/angular-easy-masks.min.js\"></script>\r\n\r\n#### JavaScript\r\n\r\n    var app = angular.module('app', ['wt.easy']);\r\n\r\n## License\r\n\r\nMIT","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}